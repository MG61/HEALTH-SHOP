using Kurs7PM.Kurs7DataSetTableAdapters;
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Text.RegularExpressions;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;

namespace Kurs7PM.Администратор
{
    public partial class Branch : Window
    {
        Kurs7DataSet DataSet = new Kurs7DataSet();
        BranchTableAdapter BTA = new BranchTableAdapter();
        string Kurs7ConnectionString = Properties.Settings.Default.Kurs7ConnectionString1;

        public Branch()
        {
            InitializeComponent();
            data.ItemsSource = DataSet.Branch.DefaultView;
            BTA.Fill(DataSet.Branch);
        }

        //Удаляет запись выбранной ячейки
        private void minus_korz(object sender, RoutedEventArgs e)
        {
            Button button = sender as Button;
            int index = Int32.Parse(button.Tag.ToString());
            int id = index + 1;


            string Sql = "select * from dbo.branch";
            SqlConnection connection = new SqlConnection(Kurs7ConnectionString);
            connection.Open();
            SqlCommand command = new SqlCommand(Sql, connection);
            SqlDataReader reader = command.ExecuteReader();
            List<string> name = new List<string>();
            while (reader.Read())
            {
                name.Add(reader["Name"].ToString());
            }
            reader.Close();
            connection.Close();

            string Sql1 = "DROP TABLE " + name[index];
            SqlConnection connection1 = new SqlConnection(Kurs7ConnectionString);
            connection1.Open();
            SqlCommand command1 = new SqlCommand(Sql1, connection1);
            SqlDataReader reader1 = command1.ExecuteReader();
            reader1.Close();
            connection1.Close();

            BTA.DeleteQuery(id);
            BTA.Fill(DataSet.Branch);



        }

        //Отправляет удаление в конец datagrid
        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Удалить")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        //Убирает первый столбец datagrid (id)
        private void DataGrid_OnAutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.PropertyName == "ID_branch")
            {
                e.Cancel = true;
            }
        }

        //Переход к меню
        private void menu(object sender, RoutedEventArgs e)
        {
            MenuAdministrator go = new MenuAdministrator();
            go.Show();
            Close();
        }

        //Позволяет перетаскивать окно
        private void StackPanel_MouseDown(object sender, MouseButtonEventArgs e)
        {
            if (e.ChangedButton == MouseButton.Left)
            {
                this.DragMove();
            }
        }

        //Работа кнопки выключения программы
        private void Exit_with_application(object sender, RoutedEventArgs e)
        {
            System.Windows.Application.Current.Shutdown();
        }

        //Работа кнопки разворачивания программы
        private void Maximized_with_application(object sender, RoutedEventArgs e)
        {
            if (this.WindowState == WindowState.Normal)
            {
                this.WindowState = WindowState.Maximized;
            }
            else { this.WindowState = WindowState.Normal; }
        }

        //Работа кнопки сворачивания программы
        private void Minimazed_with_application(object sender, RoutedEventArgs e)
        {
            this.WindowState = WindowState.Minimized;
        }

        //Добавление сотрудника
        private void add_branch(object sender, RoutedEventArgs e)
        {
            var Number = new Regex(@"[0-9]+");
            var Angl = new Regex(@"[A-Z]+");
            var MinAngl = new Regex(@"[a-z]+");
            var Rus = new Regex(@"[А-Я]+");
            var MinRus = new Regex(@"[а-я]+");
            var Minsimbols = new Regex(@".{4,50}");
            var Effects = new Regex(@"[!@#$%^&*()_+=[{]};:<>|./?,-]");

            try
            {
                if (!string.IsNullOrWhiteSpace(filials.Text))
                {
                    if (Rus.IsMatch(filials.Text) && MinRus.IsMatch(filials.Text))
                    {
                        BTA.InsertQuery(filials.Text);
                        BTA.Fill(DataSet.Branch);

                        string priem = filials.Text;
                        string Sql = "CREATE TABLE " + priem + "(\tID_medication int identity(1,1) primary key,\r\n\tНазвание nvarchar(50) NOT NULL,\r\n\tКоличество int  NOT NULL,\r\n\tЦена int  NOT NULL);";
                        SqlConnection connection = new SqlConnection(Kurs7ConnectionString);
                        connection.Open();
                        SqlCommand command = new SqlCommand(Sql, connection);
                        SqlDataReader reader = command.ExecuteReader();
                        reader.Close();
                        connection.Close();
                    }
                }
                else { MessageBox.Show("Проверьте правильность введённых данных!"); }
            }
            catch { MessageBox.Show("Проверьте, чтобы при вводе склада, не было пробелов!"); };
        }

        //Переход к сотрудникам
        private void employee(object sender, RoutedEventArgs e)
        {
            Employee go = new Employee();
            go.Show();
            Close();
        }
    }
}
