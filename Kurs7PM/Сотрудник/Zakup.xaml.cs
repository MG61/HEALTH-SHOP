using Kurs7PM.Kurs7DataSetTableAdapters;
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Input;

namespace Kurs7PM.Сотрудник
{
    /// <summary>
    /// Логика взаимодействия для Zakup.xaml
    /// </summary>
    public partial class Zakup : Window
    {
        string Kurs7ConnectionString = Properties.Settings.Default.Kurs7ConnectionString1;
        Kurs7DataSet DataSet = new Kurs7DataSet();
        BuxgalteriaTableAdapter BTA = new BuxgalteriaTableAdapter();

        public Zakup(string address)
        {
            InitializeComponent();

            addressap.Text = address;
            BTA.Fill(DataSet.Buxgalteria);

            string Sql = "select * from dbo.Sklad";
            SqlConnection connection = new SqlConnection(Kurs7ConnectionString);
            connection.Open();
            SqlCommand command = new SqlCommand(Sql, connection);
            SqlDataReader reader = command.ExecuteReader();
            List<string> names = new List<string>();
            while (reader.Read())
            {
                comboboxsklad.Items.Add(reader["Название"].ToString());
            }
            reader.Close();
            connection.Close();

        }

        string sklad;
        private void comboBox_SelectedIndexChanged(object sender, EventArgs e)
        {
            sklad = (sender as ComboBox).SelectedItem as string;

            string Sql = "select * from " + sklad;
            SqlConnection connection = new SqlConnection(Kurs7ConnectionString);
            connection.Open();
            SqlDataAdapter command = new SqlDataAdapter(Sql, connection);
            DataSet ds = new DataSet();
            command.Fill(ds, sklad);
            connection.Close();
            data.ItemsSource = ds.Tables[sklad].DefaultView;

        }

        //Отправляет корзину в конец datagrid
        private void DataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            var grid = (DataGrid)sender;
            foreach (var item in grid.Columns)
            {
                if (item.Header.ToString() == "Аптека")
                {
                    item.DisplayIndex = grid.Columns.Count - 1;
                    break;
                }
            }
        }

        //Переход к окну авторизации
        private void authorization(object sender, RoutedEventArgs e)
        {
            Pharmacy go = new Pharmacy(addressap.Text);
            go.Show();
            Close();
        }

        //Убирает первый столбец id
        private void DataGrid_OnAutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
            if (e.PropertyName == "ID_providersklad")
            {
                e.Cancel = true;
            }
        }

        //Позволяет перетаскивать окно
        private void StackPanel_MouseDown(object sender, MouseButtonEventArgs e)
        {
            if (e.ChangedButton == MouseButton.Left)
            {
                this.DragMove();
            }
        }

        //Работа кнопки выключения программы
        private void Exit_with_application(object sender, RoutedEventArgs e)
        {
            System.Windows.Application.Current.Shutdown();
        }

        //Работа кнопки разворачивания программы
        private void Maximized_with_application(object sender, RoutedEventArgs e)
        {
            if (this.WindowState == WindowState.Normal)
            {
                this.WindowState = WindowState.Maximized;
            }
            else { this.WindowState = WindowState.Normal; }
        }

        //Работа кнопки сворачивания программы
        private void Minimazed_with_application(object sender, RoutedEventArgs e)
        {
            this.WindowState = WindowState.Minimized;
        }

        //Добавление товара на склад филиала
        private void Dob_korz(object sender, RoutedEventArgs e)
        {
            Button button = sender as Button;
            int index = Int32.Parse(button.Tag.ToString());
            int pomindex = index + 1;

            string Sql4 = "select * from " + sklad;
            SqlConnection connection4 = new SqlConnection(Kurs7ConnectionString);
            connection4.Open();
            SqlCommand command4 = new SqlCommand(Sql4, connection4);
            SqlDataReader reader4 = command4.ExecuteReader();
            List<string> names4 = new List<string>();
            List<string> quantity4 = new List<string>();
            List<string> price4 = new List<string>();
            while (reader4.Read())
            {
                names4.Add(reader4["Название"].ToString());
                quantity4.Add(reader4["Количество"].ToString());
                price4.Add(reader4["Цена"].ToString());
            }
            reader4.Close();
            connection4.Close();

            int pribavquantity = Int32.Parse(quantity4[index]);
            pribavquantity--;

            //Если товара нет, то удаляет его
            if (pribavquantity == 0)
            {
                string Sql1 = "DELETE  FROM " + sklad + " WHERE Название=" + "'" + names4[index] + "';";
                SqlConnection connection1 = new SqlConnection(Kurs7ConnectionString);
                connection1.Open();
                SqlCommand command1 = new SqlCommand(Sql1, connection1);
                SqlDataReader reader1 = command1.ExecuteReader();
                reader1.Close();
                connection1.Close();
            }

            //Если товар есть, то отнимает количество
            else if (pribavquantity >= 1)
            {
                string Sql1 = "UPDATE " + sklad + " SET Количество = " + pribavquantity + "WHERE Название=" + "'" + names4[index] + "';";
                SqlConnection connection1 = new SqlConnection(Kurs7ConnectionString);
                connection1.Open();
                SqlCommand command1 = new SqlCommand();
                command1.CommandText = Sql1;
                command1.Connection = connection1;
                command1.ExecuteNonQuery();
                connection1.Close();
            }

            //Проверка на уже существующие записи
            string Sql3 = "select * from " + addressap.Text;
            SqlConnection connection3 = new SqlConnection(Kurs7ConnectionString);
            connection3.Open();
            SqlCommand command3 = new SqlCommand(Sql3, connection3);
            SqlDataReader reader3 = command3.ExecuteReader();
            List<string> names3 = new List<string>();
            List<string> quantity3 = new List<string>();
            while (reader3.Read())
            {
                names3.Add(reader3["Название"].ToString());
                quantity3.Add(reader3["Количество"].ToString());
            }
            reader3.Close();

            connection3.Close();

            int temp = 2;
            if (names3.Contains(names4[index]))
            {
                temp = 1;
            }
            string quantitycompany = "";
            string Sql6 = "select * from " + addressap.Text + "WHERE Название = " + "'" + names4[index] + "';";
            SqlConnection connection6 = new SqlConnection(Kurs7ConnectionString);
            connection6.Open();
            SqlCommand command6 = new SqlCommand(Sql6, connection6);
            SqlDataReader reader6 = command6.ExecuteReader();
            while (reader6.Read())
            {
                quantitycompany = reader6["Количество"].ToString();
            }
            reader6.Close();
            connection6.Close();




            if (temp == 1)
            {
                int quan = Int32.Parse(quantitycompany.ToString()); ;
                quan++;
                string Sql1 = "UPDATE " + addressap.Text + " SET Количество = " + quan + "WHERE Название=" + "'" + names4[index] + "';";
                SqlConnection connection1 = new SqlConnection(Kurs7ConnectionString);
                connection1.Open();
                SqlCommand command1 = new SqlCommand();
                command1.CommandText = Sql1;
                command1.Connection = connection1;
                command1.ExecuteNonQuery();
                connection1.Close();
            }
            else if (temp == 2)
            {
                string Sql5 = "INSERT INTO " + addressap.Text + " (Название, Количество, Цена)" + " VALUES (" + "'" + names4[index] + "'" + ", " + 1 + ", " + price4[index] + ");";
                SqlConnection connection5 = new SqlConnection(Kurs7ConnectionString);
                connection5.Open();
                SqlCommand command5 = new SqlCommand();
                command5.CommandText = Sql5;
                command5.Connection = connection5;
                command5.ExecuteNonQuery();
                connection5.Close();
            }

            temp = 2;

            string Sql9 = "select * from " + sklad;
            SqlConnection connection9 = new SqlConnection(Kurs7ConnectionString);
            connection9.Open();
            SqlDataAdapter command9 = new SqlDataAdapter(Sql9, connection9);
            DataSet ds9 = new DataSet();
            command9.Fill(ds9, sklad);
            connection9.Close();
            data.ItemsSource = ds9.Tables[sklad].DefaultView;

            int lastsumm = 0;
            string Sql = "SELECT * FROM Buxgalteria WHERE ID_bux=(SELECT max(ID_bux) FROM Buxgalteria);";
            SqlConnection connection = new SqlConnection(Kurs7ConnectionString);
            connection.Open();
            SqlCommand command = new SqlCommand(Sql, connection);
            SqlDataReader reader = command.ExecuteReader();
            while (reader.Read())
            {
                lastsumm = Int32.Parse(reader["Остаток"].ToString());
            }
            reader.Close();
            connection.Close();


            string minus = "-" + price4[index];
            int ostatok = Int32.Parse(minus) + lastsumm;
            BTA.InsertQuery(ostatok);
            BTA.Fill(DataSet.Buxgalteria);
        }
    }
}
